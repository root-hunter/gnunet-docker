name: Build GNUnet multi-arch and create .deb

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout GNUnet repo
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build GNUnet and create .deb for ${{ matrix.arch }}
        run: |
          docker run --rm --platform linux/${{ matrix.arch }} \
            -v ${{ github.workspace }}:/workspace -w /workspace \
            ubuntu:22.04 bash -c "
              apt update &&
              apt install -y git autoconf automake libtool meson gettext recutils build-essential \
                libltdl-dev libgcrypt20-dev libidn2-0-dev libmicrohttpd-dev libunistring-dev libjansson-dev \
                libcurl4-gnutls-dev libgnutls28-dev libgmp-dev texinfo texlive texlive-fonts-recommended \
                texlive-lang-english texlive-latex-base make pkgconf zlib1g-dev iptables libsqlite3-dev \
                libextractor-dev libnss3-dev libopus-dev libogg-dev libpulse-dev libbluetooth-dev libsodium-dev \
                libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev perl dpkg-dev &&
              git clone git://git.gnunet.org/gnunet.git &&
              cd gnunet &&
              ./bootstrap &&
              meson setup -Dprefix=/usr/local build &&
              meson compile -C build
            "
      - name: Upload .deb package for ${{ matrix.arch }}
        uses: actions/upload-artifact@v4
        with:
          name: gnunet-${{ matrix.arch }}-deb
          path: gnunet_${{ matrix.arch }}.deb
