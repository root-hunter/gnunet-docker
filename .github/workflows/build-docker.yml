name: Build GNUnet multi-arch and create .deb

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-ubuntu:
    strategy:
      matrix:
        #arch: [amd64, arm64]
        arch: [amd64]
        version: [latest, 24.04]
    env:
      VERSION: ${{ github.event.release.tag_name }}
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      UPLOAD_URL: ${{ github.event.release.upload_url }}
      OUT_DIR: out/ubuntu/${{ matrix.arch }}
      BUILDER_PATH: builders/Dockerfile.ubuntu
      BUILD_NAME: gnunet-${{ github.event.release.tag_name }}-ubuntu-${{ matrix.version }}-${{ matrix.arch }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GNUnet repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build GNUnet ${{ env.VERSION }} (${{ env.BUILD_NAME }})
        run: |
          docker buildx build \
            --platform linux/${{ matrix.arch }} \
            --file ${{ env.BUILDER_PATH }} \
            --output type=local,dest=${{ env.OUT_DIR }} \
            --build-arg VERSION=${{ matrix.version }} \
            .
      - name: Upload .deb package to artifact (${{ env.BUILD_NAME }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_NAME }}
          path: ${{ env.OUT_DIR }}/gnunet.deb
      - name: Upload .deb to release (${{ env.BUILD_NAME }})
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ${{ env.OUT_DIR }}/gnunet.deb
          asset_name: ${{ env.BUILD_NAME }}.deb
          asset_content_type: application/vnd.debian.binary-package